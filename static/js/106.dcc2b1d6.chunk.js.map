{"version":3,"file":"static/js/106.dcc2b1d6.chunk.js","mappings":"gNAEaA,EAAaC,EAAAA,EAAAA,GAAH,sEAKVC,EAAYD,EAAAA,EAAAA,GAAH,oZ,SCsBtB,EAzBkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACL,EAAD,UACKG,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACR,SAACN,EAAD,WACI,SAAC,KAAD,CAAOO,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMP,GAA1C,SACKI,KAFOD,EADR,KAUvB,C,kIChBYK,EAAOX,EAAAA,EAAAA,KAAH,sBAEJY,EAAQZ,EAAAA,EAAAA,MAAH,sHAQLa,EAASb,EAAAA,EAAAA,OAAH,+F,SCoBnB,EA7BmB,SAAC,GAAwB,IAAtBc,EAAqB,EAArBA,eAClB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYF,OACE,UAACN,EAAD,CAAMO,SAPa,SAAAC,GACnBA,EAAEC,iBACAN,EAAe,CAAEE,MAAAA,IACjBC,EAAS,GACZ,EAGC,WACE,SAACL,EAAD,CACES,KAAK,OACLC,YAAY,4BACZC,WAAS,EACTC,MAAOR,EACPS,SAjBsB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACnCP,EAASO,EACZ,KAiBC,SAACX,EAAD,CAAQQ,KAAK,SAAb,sBAKL,E,QCID,EA3Be,WAAO,IAAD,EACjB,GAAsCM,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBd,EAApB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAe2B,EAAf,KACMC,EAAU,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAgB/C,OAdAC,EAAAA,EAAAA,YAAU,WAEa,KAAfF,KACJG,EAAAA,EAAAA,IAAsBH,GACjBI,MAAK,SAAAC,GACFN,EAAUM,EACb,IACAC,OAAM,SAAAC,GAAG,OACNC,QAAQC,MAAMF,EADR,KAGdJ,EAAAA,EAAAA,MACH,GAAE,CAACH,EAAYF,KAIhB,iCACE,SAAC,EAAD,CAAYd,eAAgBA,KAC3B,SAAC0B,EAAA,EAAD,CAAWtC,OAAQA,MAGzB,C,+LC9BDuC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBZ,EAAqB,mCAAG,WAAMjB,GAAN,yFACZyB,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACgB1B,EADhB,+CADY,uBAC3B4B,EAD2B,EAC3BA,KAD2B,kBAK5BA,EAAKC,SALuB,2CAAH,sDAQrBC,EAAe,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IAAA,gBACTM,EADS,oBACUL,EADV,oBADS,cACvBM,EADuB,yBAItBA,EAAMJ,MAJgB,2CAAH,sDAOfK,EAAY,mCAAG,WAAMF,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,qBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,EAAKM,MAJc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMJ,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,2BADM,uBACrBE,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,qD","sources":["components/MovieList/MovieList.module.jsx","components/MovieList/MovieList.jsx","components/SearchForm/Form.module.jsx","components/SearchForm/Form.jsx","pages/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieItems = styled.ul`\n  list-style: none;\n  padding: 0px 20px;\n \n`;\nexport const MovieItem = styled.li`\n  font-weight: 700;\n  font-size: 18px;\n\n  width:400px;\n\n  background-color:  rgb(62, 62, 239);\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n  border-radius: 14px;\n\n    background-color: #ffc700;\n   \n  }\n\n  a {\n    display: block;\n  color:#ffffff;\n\n    text-decoration: none;\n\n    padding: 10px;\n  }\n`;","import { Link, useLocation } from \"react-router-dom\";\nimport { MovieItems, MovieItem } from \"./MovieList.module\";\nimport PropTypes from \"prop-types\";\n\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <MovieItems>\n            {movies.map(({ id, original_title }) => (\n                <MovieItem key={id}>\n                    <Link  to={`/movies/${id}`} state={{from: location}}> \n                        {original_title}\n                    </Link>\n                </MovieItem>\n            )\n            )}\n        </MovieItems>\n    )\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;","import styled from '@emotion/styled';\n\nexport const Form = styled.form``;\n\nexport const Input = styled.input`\nmargin:20px;\npadding: 10px;\nwidth: 360px;\nborder: 2px solid yellow;\nborder-radius: 14px;\n`;\n\nexport const Button = styled.button`\noutline:none;\nborder:none;\nborder-radius: 8px;\npadding: 10px 20px;\n`;","import { useState } from 'react';\nimport { Form, Input, Button } from './Form.module';\n\nconst SearchForm = ({ setSearchQuery }) => {\n    const [query, setQuery] = useState('');\n    \n    const handleInputChange = ({ target: { value } }) => {\n        setQuery(value);\n    };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n      setSearchQuery({ query });\n      setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Please enter movie name..\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchForm;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieBySearchQuery } from \"services/Api\";\n\nimport SearchForm from 'components/SearchForm/Form';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n    const [searchQuery, setSearchQuery] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const inputValue = searchQuery.get(\"query\") ?? \"\";\n\n    useEffect(() => {\n\n        if (inputValue === '') return;\n        getMovieBySearchQuery(inputValue)\n            .then(res => {\n                setMovies(res)\n            })\n            .catch(err =>\n                console.error(err));\n            \n        getMovieBySearchQuery();\n    }, [inputValue, searchQuery]);\n    \n\n    return (\n    <>\n      <SearchForm setSearchQuery={setSearchQuery} />\n      {<MovieList movies={movies} />}\n    </>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = 'decf0d9b807b1f4d767e254a6a4af171';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${KEY}`);\n  return data.results;\n};\n\nexport const getMovieBySearchQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const movie = await axios.get(\n    `movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return movie.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}&language=en-US'`\n  );\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};"],"names":["MovieItems","styled","MovieItem","movies","location","useLocation","map","id","original_title","to","state","from","Form","Input","Button","setSearchQuery","useState","query","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","useSearchParams","searchQuery","setMovies","inputValue","get","useEffect","getMovieBySearchQuery","then","res","catch","err","console","error","MovieList","axios","KEY","getTrendingMovies","data","results","getMovieDetails","movieId","movie","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}