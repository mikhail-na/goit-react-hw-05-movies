{"version":3,"file":"static/js/945.e438d16f.chunk.js","mappings":"qPAEaA,EAAWC,EAAAA,EAAAA,GAAH,8FAQRC,EAAWD,EAAAA,EAAAA,GAAH,sIAYRE,EAAQF,EAAAA,EAAAA,EAAH,wEAMLG,EAAcH,EAAAA,EAAAA,EAAH,qC,SCkCxB,EAxDa,WACT,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,YAEFC,EAAAA,EAAAA,IAAaH,GACRI,MAAK,SAAAC,GAAG,OACLN,EAAQM,EADH,IAERC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,GAGZ,GAAE,CAACP,IAIY,IAATF,GACF,gBACDY,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,QAAS,QACTC,SAAU,OACVC,WAAY,IAEZC,MAAO,QARV,kDAWG,+BACI,SAACxB,EAAD,UAEKM,EAAKmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACN,UAAC3B,EAAD,YACI,gBACI4B,MAAM,QACNC,IACIJ,EAAY,yCAC4BA,GAD5B,6EAIhBK,IAAKJ,KAET,UAACzB,EAAD,YACI,qCADJ,IACyByB,MAEzB,SAACxB,EAAD,UAAcyB,MAbHH,EADT,OAqB7B,C,+LC1DDO,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAqB,mCAAG,WAAMC,GAAN,yFACZN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACgBK,EADhB,+CADY,uBAC3BH,EAD2B,EAC3BA,KAD2B,kBAK5BA,EAAKC,SALuB,2CAAH,sDAQrBG,EAAe,mCAAG,WAAMhC,GAAN,uFACTyB,EAAAA,EAAAA,IAAA,gBACTzB,EADS,oBACU0B,EADV,oBADS,cACvBO,EADuB,yBAItBA,EAAML,MAJgB,2CAAH,sDAOfzB,EAAY,mCAAG,WAAMH,GAAN,yFACHyB,EAAAA,EAAAA,IAAA,gBACZzB,EADY,4BACe0B,EADf,qBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,EAAK9B,MAJc,2CAAH,sDAOZoC,EAAe,mCAAG,WAAMlC,GAAN,yFACNyB,EAAAA,EAAAA,IAAA,gBACZzB,EADY,4BACe0B,EADf,2BADM,uBACrBE,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,qD","sources":["components/Cast/Cast.module.jsx","components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\n\ndisplay:flex;\nflex-wrap:wrap;\npadding: 0 10px;\nlist-style:none;\n`;\n\nexport const CastItem = styled.li`\n\nwidth:200px;\n// gap:20px;\nmargin:20px;\n\n\npadding:8px;\nborder: 3px solid yellow;\nborder-radius:10px;\n`;\n\nexport const Actor = styled.p`\nfont-size:20px;\nfont-weight:700;\ncolor:#fff;\n`;\n\nexport const Description = styled.p`\ncolor:#fff;\n`;","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport {  useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/Api';\nimport { CastList, CastItem, Actor, Description } from './Cast.module';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fetchMovieCast = () => {\n            getMovieCast(movieId)\n                .then(res =>\n                    setCast(res))\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n        fetchMovieCast();\n    }, [movieId])\n\n\n   \n    return cast === 0 ?\n        (<div\n        style={{\n            display: 'flex',\n            justifyContent: 'center',\n            padding: '100px',\n            fontSize: '30px',\n            fontWeight: 700,\n\n            color: '#fff',\n\n        }}>There's no Cast, please try again..</div>) : (\n            <>\n                <CastList>\n                    \n                    {cast.map(({ id, profile_path, original_name, character }) => (\n                        <CastItem key={id}>\n                            <img\n                                width=\"200px\"\n                                src={\n                                    profile_path\n                                        ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                                        : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n                                }\n                                alt={original_name}\n                            />\n                            <Actor>\n                                <span>Actor:</span> {original_name}\n                            </Actor>\n                            <Description>{character}</Description>\n                        </CastItem>\n                    ))}\n                </CastList>\n        \n            </>\n        );\n};\n\nexport default Cast;\n\n\nCast.propTypes = {\n    Cast: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        original_name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n    })),\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = 'decf0d9b807b1f4d767e254a6a4af171';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${KEY}`);\n  return data.results;\n};\n\nexport const getMovieBySearchQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const movie = await axios.get(\n    `movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return movie.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}&language=en-US'`\n  );\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};"],"names":["CastList","styled","CastItem","Actor","Description","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","res","catch","err","console","log","style","display","justifyContent","padding","fontSize","fontWeight","color","map","id","profile_path","original_name","character","width","src","alt","axios","KEY","getTrendingMovies","data","results","getMovieBySearchQuery","query","getMovieDetails","movie","getMovieReviews"],"sourceRoot":""}